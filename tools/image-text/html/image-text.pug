---
title: 'Text on Image Online'
description: 'Online tool to add text on Images and save it in JPG/PNG. Choose from multiple Google Fonts for writing text on image.'
layout: 'tools'
styles:
  - 'styles/image-text.css'
scripts:
  - 'https://unpkg.com/vue@2.0.3/dist/vue.js'
  - 'https://unpkg.com/axios/dist/axios.min.js'
  - 'https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js'
  - 'https://unpkg.com/tinycolor2@1.4.1/dist/tinycolor-min.js'
  - 'https://unpkg.com/canvas-text-wrapper@0.9.3/canvas-text-wrapper.min.js'
  - 'https://unpkg.com/downloadjs@1.4.6/download.min.js'
  - '/scripts/shared/modernizer-adownload.js'
  - 'scripts/image-text.js'
---

#app.container.section-medium
  .grid
    .one-half
        canvas#imageText(width="800", height="520", style="border:1px solid #eee;", ref="canvasElement")

        #gradientDownload
          button.button(@click='download(false)') Download PNG
          button.button(@click='download(true)') Download JPG
    .one-half
      label.color(for="bodyText")   Text
        textArea#bodyText(rows="3", v-model="bodyText")

      label(for="font") Google Font
        select#font(v-model="font", ref="fontSelect")
          option(v-for="option in fontOptions", v-bind:value="option") {{ option }}

      input#shadow(type="checkbox", v-model="hasShadow")
      label.label-inline(for="shadow") Text Shadow

      label(for="font") Text Position
        select#position(v-model="position", ref="positionSelect")
          option(value='left-top') Top-Left
          option(value='center-top') Top-Center
          option(value='right-top') Top-Right
          option(value='left-middle') Left
          option(value='center-middle') Center
          option(value='right-middle') Right
          option(value='left-bottom') Bottom-Left
          option(value='center-bottom') Bottom-Center
          option(value='right-bottom') Bottom-Right

      #backgroundDiv
        label(for="backgroundType") Background Type
        input(type="radio", id="image", value="image", v-model="backgroundType")
        label.label-inline(for="image") Image     
        input(type="radio", id="color", value="color", v-model="backgroundType")
        label.label-inline(for="color") Color        
        input(type="radio", id="gradient", value="gradient", v-model="backgroundType")
        label.label-inline(for="gradient") Gradient

        .section

          label.color(for="backgroundCol", v-if="backgroundType == 'color'") Background Color
            button.button-ghost(@click='backgroundColor = randomColor()') Random
            input#backgroundCol(type="text", v-model="backgroundColor")
            span.colorPreview(:style="backgroundFromColor(backgroundColor)")

          div(v-if="backgroundType == 'gradient'")          
            label.color(for="primaryColor") Primary Color
              button.button-ghost(@click='primaryColor = randomColor()') Random
              input#primaryColor(type="text", v-model="primaryColor")
              span.colorPreview(:style="backgroundFromColor(primaryColor)")

            label.color(for="secondaryColor") Secondary Color        
              button.button-ghost(@click='secondaryColor= randomColor()') Random
              input#secondaryColor(type="text", v-model="secondaryColor")
              span.colorPreview(:style="backgroundFromColor(secondaryColor)")
